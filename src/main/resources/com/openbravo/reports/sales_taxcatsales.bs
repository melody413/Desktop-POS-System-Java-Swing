//    uniCenta oPOS - touch friendly EPoS
//    Copyright Â© 2009-2020 uniCenta & previous Openbravo POS works
//    https://unicenta.com
//
//    This file is part of uniCenta oPOS
//
//    uniCenta oPOS is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    uniCenta oPOS is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with uniCenta oPOS.  If not, see <http://www.gnu.org/licenses/>.

report = new com.openbravo.pos.reports.PanelReportBean();

report.setTitleKey("Menu.TaxCatSales");
report.setReport("/com/openbravo/reports/sales_taxcatsales");
report.setResourceBundle("com/openbravo/reports/sales_messages");

report.setSentence("SELECT " +
        "receipts.DATENEW, " +
        "taxes.name AS TAXNAME, " +
        "YEAR(receipts.datenew) AS YEAR, " +
        "MONTH(receipts.datenew) AS MONTH, " +
        "DAY(receipts.datenew) AS DAY, " +      
        "ROUND(SUM(taxlines.base),2) AS BASE, " +
        "ROUND(SUM(taxlines.amount),2) AS TAX, " +
        "ROUND(SUM(taxlines.base + taxlines.amount),2) AS TOTAL, " +
        "COUNT(*) AS TICKETS " +
    "FROM ((taxlines taxlines " +
        "INNER JOIN receipts receipts ON (taxlines.receipt = receipts.id) " +
        "INNER JOIN taxes taxes ON (taxlines.taxid = taxes.id)) " +
        "INNER JOIN tickets tickets ON (tickets.id = receipts.id)) " +
    "WHERE ?(QBF_FILTER) "+
    "GROUP BY taxes.name, YEAR(receipts.datenew), MONTH(receipts.datenew), DAY(receipts.datenew) ");

report.addParameter("receipts.DATENEW");
report.addParameter("receipts.DATENEW");

paramdates = new com.openbravo.pos.reports.JParamsDatesInterval();
paramdates.setStartDate(com.openbravo.beans.DateUtils.getToday());
paramdates.setEndDate(com.openbravo.beans.DateUtils.getTodayMinutes());

report.addQBFFilter(paramdates);

report.addField("DATENEW", com.openbravo.data.loader.Datas.TIMESTAMP);
report.addField("TAXNAME", com.openbravo.data.loader.Datas.STRING);
report.addField("YEAR", com.openbravo.data.loader.Datas.STRING);
report.addField("MONTH", com.openbravo.data.loader.Datas.STRING);
report.addField("DAY", com.openbravo.data.loader.Datas.STRING);
report.addField("BASE", com.openbravo.data.loader.Datas.DOUBLE);
report.addField("TAX", com.openbravo.data.loader.Datas.DOUBLE);
report.addField("TOTAL", com.openbravo.data.loader.Datas.DOUBLE);
report.addField("TICKETS", com.openbravo.data.loader.Datas.INT);

report;